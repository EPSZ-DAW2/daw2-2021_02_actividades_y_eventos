-- MySQL Script generated by MySQL Workbench
-- 11/21/21 01:59:04
-- Model: DAW2-Actividades    Version: 1.0

-- Proyecto en Grupo - Actividades y Eventos.
-- Desarrollo de Aplicaciones Web II.
-- Escuela Politécnica Superior de Zamora.
-- Universidad de Salamanca.
-- 

-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema daw2_actividades
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `daw2_actividades` ;

-- -----------------------------------------------------
-- Schema daw2_actividades
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `daw2_actividades` DEFAULT CHARACTER SET utf8 ;
USE `daw2_actividades` ;

-- -----------------------------------------------------
-- Table `daw2_actividades`.`actividad_comentarios`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `daw2_actividades`.`actividad_comentarios` ;

CREATE TABLE IF NOT EXISTS `daw2_actividades`.`actividad_comentarios` (
  `id` INT(12) UNSIGNED NOT NULL AUTO_INCREMENT,
  `actividad_id` INT(12) UNSIGNED NOT NULL COMMENT 'Actividad relacionada',
  `crea_usuario_id` INT(12) UNSIGNED NULL DEFAULT '0' COMMENT 'Usuario que ha creado el comentario o CERO (como si fuera NULL) si no existe o se hizo por un administrador de sistema.',
  `crea_fecha` DATETIME NULL DEFAULT NULL COMMENT 'Fecha y Hora de creación del comentario o NULL si no se conoce por algún motivo.',
  `modi_usuario_id` INT(12) UNSIGNED NULL DEFAULT '0' COMMENT 'Usuario que ha modificado el comentario por última vez o CERO (como si fuera NULL) si no existe o se hizo por un administrador de sistema.',
  `modi_fecha` DATETIME NULL DEFAULT NULL COMMENT 'Fecha y Hora de la última modificación del comentario o NULL si no se conoce por algún motivo.',
  `texto` TEXT NOT NULL COMMENT 'El texto del comentario.',
  `comentario_id` INT(12) UNSIGNED NULL DEFAULT '0' COMMENT 'Comentario relacionado, si se permiten encadenar respuestas. Nodo padre de la jerarquia de comentarios, CERO si es nodo raiz.',
  `cerrado` TINYINT(1) NOT NULL DEFAULT '0' COMMENT 'Indicador de cierre de los comentarios: 0=No, 1=Si(No se puede responder al comentario)',
  `num_denuncias` INT(9) NOT NULL DEFAULT '0' COMMENT 'Contador de denuncias del comentario o CERO si no ha tenido.',
  `fecha_denuncia1` DATETIME NULL COMMENT 'Fecha y Hora de la primera denuncia. Debería estar a NULL si no tiene denuncias (contador a cero), o si el contador se reinicia.',
  `bloqueado` TINYINT(1) NOT NULL DEFAULT '0' COMMENT 'Indicador de comentario bloqueado: 0=No, 1=Si(bloqueado por denuncias), 2=Si(bloqueado por administrador), ...',
  `fecha_bloqueo` DATETIME NULL DEFAULT NULL COMMENT 'Fecha y Hora del bloqueo del comentario. Debería estar a NULL si no está bloqueado o si se desbloquea.',
  `notas_bloqueo` TEXT NULL DEFAULT NULL COMMENT 'Notas visibles sobre el motivo del bloqueo del comentario o NULL si no hay -se muestra por defecto según indique \"bloqueado\"-.',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `daw2_actividades`.`actividad_etiquetas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `daw2_actividades`.`actividad_etiquetas` ;

CREATE TABLE IF NOT EXISTS `daw2_actividades`.`actividad_etiquetas` (
  `id` INT(12) UNSIGNED NOT NULL AUTO_INCREMENT,
  `actividad_id` INT(12) UNSIGNED NOT NULL COMMENT 'Actividad relacionada',
  `etiqueta_id` INT(12) UNSIGNED NOT NULL COMMENT 'Etiqueta relacionada.',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `daw2_actividades`.`actividad_imagenes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `daw2_actividades`.`actividad_imagenes` ;

CREATE TABLE IF NOT EXISTS `daw2_actividades`.`actividad_imagenes` (
  `id` INT(12) UNSIGNED NOT NULL AUTO_INCREMENT,
  `actividad_id` INT(12) UNSIGNED NOT NULL COMMENT 'Actividad relacionada',
  `orden` INT(3) NOT NULL DEFAULT '0' COMMENT 'Orden de aparición de la imagen dentro del grupo de imagenes de la actividad. Opcional.',
  `imagen_id` VARCHAR(25) NOT NULL COMMENT 'Nombre identificativo (fichero interno) con la imagen para la actividad, aqui no puede ser NULL si no hay.',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `daw2_actividades`.`actividad_participantes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `daw2_actividades`.`actividad_participantes` ;

CREATE TABLE IF NOT EXISTS `daw2_actividades`.`actividad_participantes` (
  `id` INT(12) UNSIGNED NOT NULL AUTO_INCREMENT,
  `fecha_registro` DATETIME NOT NULL COMMENT 'Fecha y Hora de registro de participación en la actividad por parte del usuario.',
  `actividad_id` INT(12) UNSIGNED NOT NULL COMMENT 'Actividad relacionada',
  `usuario_id` INT(12) UNSIGNED NOT NULL COMMENT 'Usuario relacionado, que participara en la actividad.',
  `datos_participacion` TEXT NULL COMMENT 'Datos adicionales del participante en su registro de participación. Será NULL mientras no haya un formulario de participación.',
  `fecha_cancelacion` DATETIME NOT NULL COMMENT 'Fecha y Hora de cancelación de la participación por parte del usuario.',
  `notas_cancelacion` TEXT NULL DEFAULT NULL COMMENT 'Notas sobre el motivo de la cancelación de la participación del usuario o NULL si no lo indica o no hay.',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `daw2_actividades`.`actividad_seguimientos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `daw2_actividades`.`actividad_seguimientos` ;

CREATE TABLE IF NOT EXISTS `daw2_actividades`.`actividad_seguimientos` (
  `id` INT(12) UNSIGNED NOT NULL AUTO_INCREMENT,
  `actividad_id` INT(12) UNSIGNED NOT NULL COMMENT 'Actividad relacionada',
  `usuario_id` INT(12) UNSIGNED NOT NULL COMMENT 'Usuario relacionado, seguidor de la actividad.',
  `fecha_seguimiento` DATETIME NOT NULL COMMENT 'Fecha y Hora de activación del seguimiento de la actividad por parte del usuario.',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `daw2_actividades`.`actividades`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `daw2_actividades`.`actividades` ;

CREATE TABLE IF NOT EXISTS `daw2_actividades`.`actividades` (
  `id` INT(12) UNSIGNED NOT NULL AUTO_INCREMENT,
  `titulo` TEXT NOT NULL COMMENT 'Titulo corto o slogan para la actividad.',
  `descripcion` TEXT NULL COMMENT 'Descripción breve de la actividad o NULL si no es necesaria.',
  `fecha_celebracion` DATETIME NULL DEFAULT NULL COMMENT 'Fecha y Hora de celebración de la actividad o NULL si no se conoce (mostrar próximamente).',
  `duracion_estimada` INT(6) NOT NULL DEFAULT '0' COMMENT 'Tiempo en Minutos de duración estimada de la actividad, si es CERO no se conoce o no es relevante.',
  `detalles_celebracion` TEXT NULL DEFAULT NULL COMMENT 'Detalles de celebración de la actividad si es necesario o NULL si no hay.',
  `direccion` TEXT NULL DEFAULT NULL COMMENT 'Dirección concreta del lugar de celebración de la actividad o NULL si no se conoce, aunque no debería estar vacío este dato.',
  `como_llegar` TEXT NULL DEFAULT NULL COMMENT 'Notas sobre cómo llegar a la dirección indicada o NULL si no hay indicaciones de como llegar.',
  `notas_lugar` TEXT NULL DEFAULT NULL COMMENT 'Notas adicionales sobre el lugar de celebración de la actividad que no forman parte de la dirección o de las indicaciones, o NULL si no hay.',
  `area_id` INT(12) UNSIGNED NULL DEFAULT '0' COMMENT 'Area/Zona de celebración de la actividad o CERO si no existe o aún no está indicado (como si fuera NULL).',
  `notas` TEXT NULL DEFAULT NULL COMMENT 'Notas adicionales sobre la actividad que no forman parte de las posibles notas anteriores o NULL si no hay.',
  `url` TEXT NULL DEFAULT NULL COMMENT 'Dirección web externa (opcional) que enlaza con la página \"oficial\" de la actividad o NULL si no hay.',
  `imagen_id` VARCHAR(25) NULL COMMENT 'Nombre identificativo (fichero interno) con la imagen principal o \"de presentación\" de la actividad, o NULL si no hay.',
  `edad_id` TINYINT(1) NOT NULL DEFAULT '0' COMMENT 'Edad recomendada por Rango de Edades: 0=Todas las edades, 1=Bebé (0 a 3 años), 2=Infantil (4 a 9), 3=Alevín (10 a 14), 3=Juvenil (15 a 17), 4=Adulto Joven (18-25), 5=Adulto Medio (26-35), 6=Adulto Mayor (36-65), 7=Tercera Edad (>66).',
  `publica` TINYINT(1) NOT NULL DEFAULT '0' COMMENT 'Indicador de actividad para todos los usuarios o solo para los registrados: 0=Privada, 1=Publica.',
  `visible` TINYINT(1) NOT NULL DEFAULT '0' COMMENT 'Indicador de actividad visible a los usuarios o invisible (se está manteniendo): 0=Invisible, 1=Visible.',
  `terminada` TINYINT(1) NOT NULL DEFAULT '0' COMMENT 'Indicador de actividad terminada: 0=No, 1=Realizada, 2=Suspendida, 3=Cancelada por Inadecuada, ...',
  `fecha_terminacion` DATETIME NULL COMMENT 'Fecha y Hora de terminación de la actividad. Debería estar a NULL si no está terminada.',
  `notas_terminacion` TEXT NULL DEFAULT NULL COMMENT 'Notas visibles sobre el motivo de la terminación de la actividad.',
  `num_denuncias` INT(9) NOT NULL DEFAULT '0' COMMENT 'Contador de denuncias de la actividad o CERO si no ha tenido.',
  `fecha_denuncia1` DATETIME NULL COMMENT 'Fecha y Hora de la primera denuncia. Debería estar a NULL si no tiene denuncias (contador a cero), o si el contador se reinicia.',
  `bloqueada` TINYINT(1) NOT NULL DEFAULT '0' COMMENT 'Indicador de actividad bloqueada: 0=No, 1=Si(bloqueada por denuncias), 2=Si(bloqueada por administrador), ...',
  `fecha_bloqueo` DATETIME NULL COMMENT 'Fecha y Hora del bloqueo de la actividad. Debería estar a NULL si no está bloqueada o si se desbloquea.',
  `notas_bloqueo` TEXT NULL DEFAULT NULL COMMENT 'Notas visibles sobre el motivo del bloqueo de la actividad o NULL si no hay -se muestra por defecto según indique \"bloqueada\"-.',
  `max_participantes` INT(9) NOT NULL DEFAULT '0' COMMENT 'Indica si está abierta la participación y el número máximo de participantes que pueden apuntarse en la actividad, 0:No se admiten participantes, >0:Ese valor límite, -1:No hay límite máximo.',
  `min_participantes` INT(9) NOT NULL DEFAULT '0' COMMENT 'Indica el número de participantes apuntados para que la actividad se lleve a cabo, >=0:Ese valor mínimo, -1:No hay mínimo.',
  `reserva_participantes` TINYINT(1) NOT NULL DEFAULT '0' COMMENT 'Valor lógico para indicar si se admiten o no participantes en reserva en caso de que esté abierta la participación de la actividad con el \"participantes_maxima\".',
  `formulario_participacion` TEXT NULL COMMENT 'Bloque de información con la configuración de los campos de datos requeridos para el formulario de registro de participación en la actividad. Será NULL si no necesita configuración de datos adicionales.',
  `votosOK` INT(9) NOT NULL DEFAULT '0' COMMENT 'Contador de votos a favor para la actividad.',
  `votosKO` INT(9) NOT NULL DEFAULT '0' COMMENT 'Contador de votos encontra para la actividad.',
  `crea_usuario_id` INT(12) UNSIGNED NULL DEFAULT '0' COMMENT 'Usuario que ha creado la actividad o CERO (como si fuera NULL) si no existe o se hizo por un administrador de sistema.',
  `crea_fecha` DATETIME NULL DEFAULT NULL COMMENT 'Fecha y Hora de creación de la actividad o NULL si no se conoce por algún motivo.',
  `modi_usuario_id` INT(12) UNSIGNED NULL DEFAULT '0' COMMENT 'Usuario que ha modificado la actividad por última vez o CERO (como si fuera NULL) si no existe o se hizo por un administrador de sistema.',
  `modi_fecha` DATETIME NULL DEFAULT NULL COMMENT 'Fecha y Hora de la última modificación de la actividad o NULL si no se conoce por algún motivo.',
  `notas_admin` TEXT NULL COMMENT 'Notas adicionales para los administradores sobre la actividad o NULL si no hay.',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `daw2_actividades`.`clasificacion_etiquetas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `daw2_actividades`.`clasificacion_etiquetas` ;

CREATE TABLE IF NOT EXISTS `daw2_actividades`.`clasificacion_etiquetas` (
  `id` INT(12) UNSIGNED NOT NULL AUTO_INCREMENT,
  `clasificacion_id` INT(12) UNSIGNED NOT NULL COMMENT 'Clasificacion relacionada, para saber a que grupo pertenece.',
  `etiqueta_id` INT(12) UNSIGNED NOT NULL COMMENT 'Etiqueta relacionada.',
  `clasificacion_etiqueta_id` INT(12) UNSIGNED NULL DEFAULT '0' COMMENT 'Clasificacion_Etiqueta relacionada. Nodo padre de la jerarquia o CERO si es nodo raiz.',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `daw2_actividades`.`clasificaciones`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `daw2_actividades`.`clasificaciones` ;

CREATE TABLE IF NOT EXISTS `daw2_actividades`.`clasificaciones` (
  `id` INT(12) UNSIGNED NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(25) NULL DEFAULT NULL,
  `descripcion` TEXT NULL DEFAULT NULL COMMENT 'Texto adicional que describe la categoria o clasificación para las etiquetas que engloba.',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `daw2_actividades`.`etiquetas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `daw2_actividades`.`etiquetas` ;

CREATE TABLE IF NOT EXISTS `daw2_actividades`.`etiquetas` (
  `id` INT(12) UNSIGNED NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(25) NULL DEFAULT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `daw2_actividades`.`usuario_avisos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `daw2_actividades`.`usuario_avisos` ;

CREATE TABLE IF NOT EXISTS `daw2_actividades`.`usuario_avisos` (
  `id` INT(12) UNSIGNED NOT NULL AUTO_INCREMENT,
  `fecha` DATETIME NOT NULL COMMENT 'Fecha y Hora de creación del aviso.',
  `clase_aviso_id` CHAR(1) NOT NULL DEFAULT 'M' COMMENT 'código de clase de aviso: A=Aviso, N=Notificación, D=Denuncia, C=Consulta, M=Mensaje Genérico,...',
  `texto` TEXT NULL COMMENT 'Texto con el mensaje de aviso.',
  `destino_usuario_id` INT(12) UNSIGNED NULL DEFAULT '0' COMMENT 'Usuario relacionado, destinatario del aviso, o NULL si no es para administración y no está gestionado.',
  `origen_usuario_id` INT(12) UNSIGNED NULL DEFAULT '0' COMMENT 'Usuario relacionado, origen del aviso, o NULL si es del sistema.',
  `actividad_id` INT(12) UNSIGNED NULL DEFAULT '0' COMMENT 'Actividad relacionada o NULL si no tiene que ver con una actividad.',
  `comentario_id` INT(12) UNSIGNED NULL DEFAULT '0' COMMENT 'Comentario relacionado o NULL si no tiene que ver con un comentario.',
  `fecha_lectura` DATETIME NULL DEFAULT NULL COMMENT 'Fecha y Hora de lectura del aviso o NULL si no se ha leido o se ha desmarcado como tal.',
  `fecha_borrado` DATETIME NULL DEFAULT NULL COMMENT 'Fecha y Hora de la marca de borrado del aviso o NULL si no se ha marcado como borrado.',
  `fecha_aceptado` DATETIME NULL DEFAULT NULL COMMENT 'Fecha y Hora de aceptación del aviso o NULL si no se ha aceptado para su gestión por un moderador o administrador. No se usa en otros usuarios.',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `daw2_actividades`.`usuarios`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `daw2_actividades`.`usuarios` ;

CREATE TABLE IF NOT EXISTS `daw2_actividades`.`usuarios` (
  `id` INT(12) UNSIGNED NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(255) NOT NULL COMMENT 'Correo Electronico y \"login\" del usuario.',
  `password` VARCHAR(60) NOT NULL,
  `nick` VARCHAR(25) NOT NULL,
  `nombre` VARCHAR(50) NOT NULL,
  `apellidos` VARCHAR(100) NOT NULL,
  `fecha_nacimiento` DATE NULL COMMENT 'Fecha de nacimiento del usuario o NULL si no lo quiere informar.',
  `direccion` TEXT NULL COMMENT 'Direccion del usuario o NULL si no quiere informar.',
  `area_id` INT(12) UNSIGNED NOT NULL DEFAULT '0' COMMENT 'Area/Zona de localización del usuario o CERO si no lo quiere informar (como si fuera NULL), aunque es recomendable.',
  `rol` CHAR(1) NOT NULL COMMENT 'Código de la Clase / Tipo de Perfil: N=Normal, M=Moderador, P=Patrocinador, A=Administrador',
  `avisos_por_correo` TINYINT(1) NOT NULL DEFAULT '1' COMMENT 'Indicador de si el usuario desea recibir correos con los avisos que se generan en el sistema para él o no.',
  `avisos_agrupados` TINYINT(1) NOT NULL DEFAULT '0' COMMENT 'Indicador de si los avisos se envian directamente al generarlos, se agrupan en un solo correo, o lo que sea.',
  `avisos_marcar_leidos` TINYINT(1) NOT NULL DEFAULT '0' COMMENT 'Indicador de marcar los correos leidos como borrados después de un tiempo  0:No marcar, >0:tiempo en días.',
  `avisos_eliminar_borrados` INT(3) NOT NULL DEFAULT '0' COMMENT 'Indicador para eliminar los correos borrados tras el tiempo indicado: >=1 día y <=1 año, o como se considere oportuno.',
  `fecha_registro` DATETIME NULL COMMENT 'Fecha y Hora de registro del usuario o NULL si no se conoce por algún motivo (que no debería ser).',
  `confirmado` TINYINT(1) NOT NULL COMMENT 'Indicador de usuario ha confirmado su registro o no.',
  `fecha_acceso` DATETIME NULL COMMENT 'Fecha y Hora del ultimo acceso del usuario. Debería estar a NULL si no ha accedido nunca.',
  `num_accesos` INT(9) NOT NULL DEFAULT '0' COMMENT 'Contador de accesos fallidos del usuario o CERO si no ha tenido o se ha reiniciado por un acceso valido o por un administrador.',
  `bloqueado` TINYINT(1) NOT NULL DEFAULT '0' COMMENT 'Indicador de usuario bloqueado: 0=No, 1=Si(bloqueada por accesos), 2=Si(bloqueada por administrador), ...',
  `fecha_bloqueo` DATETIME NULL COMMENT 'Fecha y Hora del bloqueo del usuario. Debería estar a NULL si no está bloqueado o si se desbloquea.',
  `notas_bloqueo` TEXT NULL COMMENT 'Notas visibles sobre el motivo del bloqueo del usuario o NULL si no hay -se muestra por defecto según indique \"bloqueado\"-.',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC),
  UNIQUE INDEX `nick_UNIQUE` (`nick` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `daw2_actividades`.`areas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `daw2_actividades`.`areas` ;

CREATE TABLE IF NOT EXISTS `daw2_actividades`.`areas` (
  `id` INT(12) UNSIGNED NOT NULL AUTO_INCREMENT,
  `clase_area_id` CHAR(1) NOT NULL COMMENT 'Código de clase de area: 0=Planeta, 1=Continente, 2=Pais, 3=Estado, 4=Region, 5=Provincia, 6=Poblacion, 7=Barrio, 8=Zona, ...',
  `nombre` VARCHAR(50) NOT NULL COMMENT 'Nombre del area que lo identifica.',
  `area_id` INT(12) UNSIGNED NULL DEFAULT 0 COMMENT 'Area relacionada. Nodo padre de la jerarquia o CERO si es nodo raiz.',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `daw2_actividades`.`actividad_patrocinios`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `daw2_actividades`.`actividad_patrocinios` ;

CREATE TABLE IF NOT EXISTS `daw2_actividades`.`actividad_patrocinios` (
  `id` INT(12) UNSIGNED NOT NULL AUTO_INCREMENT,
  `actividad_id` INT(12) UNSIGNED NOT NULL COMMENT 'Actividad relacionada con un anuncio de patrocinio. Es la actividad que se patrocina por medio del/los anuncios.',
  `anuncio_id` INT(12) UNSIGNED NOT NULL COMMENT 'Anuncio relacionado con la actividad.',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `daw2_actividades`.`anuncios`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `daw2_actividades`.`anuncios` ;

CREATE TABLE IF NOT EXISTS `daw2_actividades`.`anuncios` (
  `id` INT(12) UNSIGNED NOT NULL AUTO_INCREMENT,
  `titulo` TEXT NOT NULL COMMENT 'Titulo corto o slogan para el anuncio.',
  `texto` TEXT NULL COMMENT 'Texto o descripción del anuncio o NULL si no es necesario.',
  `imagen_id` VARCHAR(25) NULL COMMENT 'Nombre identificativo (fichero interno) con la imagen principal o \"de presentación\" del anuncio o NULL si no hay (que sería raro).',
  `crea_usuario_id` INT(12) UNSIGNED NULL DEFAULT '0' COMMENT 'Usuario que ha creado el anuncio o CERO (como si fuera NULL) si no existe o se hizo por un administrador de sistema.',
  `crea_fecha` DATETIME NULL DEFAULT NULL COMMENT 'Fecha y Hora de creación del anuncio o NULL si no se conoce por algún motivo.',
  `modi_usuario_id` INT(12) UNSIGNED NULL DEFAULT '0' COMMENT 'Usuario que ha modificado el anuncio por última vez o CERO (como si fuera NULL) si no existe o se hizo por un administrador de sistema.',
  `modi_fecha` DATETIME NULL DEFAULT NULL COMMENT 'Fecha y Hora de la última modificación del anuncio o NULL si no se conoce por algún motivo.',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `daw2_actividades`.`usuarios_area_moderacion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `daw2_actividades`.`usuarios_area_moderacion` ;

CREATE TABLE IF NOT EXISTS `daw2_actividades`.`usuarios_area_moderacion` (
  `id` INT(12) UNSIGNED NOT NULL AUTO_INCREMENT,
  `usuario_id` INT(12) UNSIGNED NOT NULL COMMENT 'Usuario relacionado con un Area para su moderación.',
  `area_id` INT(12) UNSIGNED NOT NULL COMMENT 'Area relacionada con el Usuario que puede moderarla.',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `daw2_actividades`.`anuncios_etiquetas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `daw2_actividades`.`anuncios_etiquetas` ;

CREATE TABLE IF NOT EXISTS `daw2_actividades`.`anuncios_etiquetas` (
  `id` INT(12) UNSIGNED NOT NULL AUTO_INCREMENT,
  `anuncio_id` INT(12) UNSIGNED NOT NULL COMMENT 'Actividad relacionada',
  `etiqueta_id` INT(12) UNSIGNED NOT NULL COMMENT 'Etiqueta relacionada.',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `daw2_actividades`.`configuraciones`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `daw2_actividades`.`configuraciones` ;

CREATE TABLE IF NOT EXISTS `daw2_actividades`.`configuraciones` (
  `variable` VARCHAR(50) NOT NULL,
  `valor` TEXT NULL,
  PRIMARY KEY (`variable`))
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Volcado de datos para la tabla `configuraciones`
-- -----------------------------------------------------
INSERT INTO `configuraciones` (`variable`, `valor`) VALUES
('LineasPagina', '10'),
('LineasPagina.Portada', '15'),
('LineasPagina.Avisos', '50'),
('numero_actividades_portada', 10),
('numero_lineas_pagina',20),
('numero_denuncias_actividad',5),
('numero_denuncias_comentario',10),
('numero_intentos_usuario',3),
('tiempo_agrupar_avisos',8),
('tiempo_borrar_avisos_leidos',7),
('tiempo_eliminar_avisos_borrados',7);


-- -----------------------------------------------------
-- Table `daw2_actividades`.`logs`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `daw2_actividades`.`logs` ;

CREATE TABLE IF NOT EXISTS `daw2_actividades`.`logs` (
  `id` INT(12) UNSIGNED NOT NULL AUTO_INCREMENT,
  `fecha` DATETIME NOT NULL COMMENT 'Fecha y Hora del mensaje de LOG.',
  `clase_log_id` CHAR(1) NOT NULL COMMENT 'código de clase de log: E=Error, A=Aviso, S=Seguimiento, I=Información, D=Depuración, ...',
  `modulo` TEXT NULL DEFAULT 'app' COMMENT 'Modulo o Sección de la aplicación que ha generado el mensaje de LOG.',
  `texto` TEXT NULL COMMENT 'Texto con el mensaje de LOG.',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
